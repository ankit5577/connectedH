{"version":3,"file":"static/js/478.1077a156.chunk.js","mappings":"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","sources":["pages/Dashboard.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router\";\nimport AuthStore from \"../services/Auth.state\";\nimport ProductStore from \"../services/Product.state\";\n\nfunction Dashboard() {\n  const authCtx = useContext(AuthStore);\n  const { id } = useParams();\n  const [product, setProduct] = useState([]);\n  const productCtx = useContext(ProductStore);\n  const navigate = useNavigate();\n  const [savedProducts, setSavedProducts] = useState(false);\n\n  const saveHandler = (product) => {\n    const name = JSON.parse(localStorage.getItem(\"connectedh_user\"))[\"name\"];\n    const savedProducts = JSON.parse(localStorage.getItem(`${name}_user_item`));\n    if (!savedProducts) {\n      localStorage.setItem(`${name}_user_item`, JSON.stringify([product]));\n    } else {\n      const index = savedProducts.findIndex(\n        (response) => response._id === product._id\n      );\n      if (index < 0) {\n        const localProducts = [...savedProducts, product];\n        localStorage.setItem(\n          `${name}_user_item`,\n          JSON.stringify(localProducts)\n        );\n      }\n    }\n  };\n\n  const deleteSave = (product) => {\n    const name = JSON.parse(localStorage.getItem(\"connectedh_user\"))[\"name\"];\n    const savedProducts = JSON.parse(localStorage.getItem(`${name}_user_item`));\n    if (!savedProducts) {\n      alert(\"product is already deleted or is unavailable!\");\n    } else {\n      const updatedSavedProducts = savedProducts.filter(\n        (response) => response._id !== product._id\n      );\n      localStorage.setItem(\n        `${name}_user_item`,\n        JSON.stringify(updatedSavedProducts)\n      );\n      setProduct(() => updatedSavedProducts);\n    }\n  };\n\n  useEffect(() => {\n    switch (id) {\n      case undefined:\n        setSavedProducts(() => false);\n        setProduct(() => productCtx.products);\n        break;\n      case \"all\":\n        setSavedProducts(() => false);\n        setProduct(() => productCtx.products);\n        break;\n      case \"saved\":\n        setSavedProducts(() => true);\n        const name = JSON.parse(localStorage.getItem(\"connectedh_user\"))[\n          \"name\"\n        ];\n        const savedProducts = JSON.parse(\n          localStorage.getItem(`${name}_user_item`)\n        );\n        if (savedProducts?.length > 0) {\n          setProduct(() => savedProducts);\n        } else {\n          setProduct(() => []);\n        }\n        break;\n      default:\n        break;\n    }\n  }, [id, productCtx.products]);\n\n  useEffect(() => {\n    if (!authCtx.isLoggedIn) {\n      alert(\"you are not logged in\");\n      navigate(\"/auth\");\n    }\n  }, [authCtx.isLoggedIn, navigate]);\n\n  useEffect(() => {\n  }, [productCtx.products]);\n\n  return (\n    <div className=\"p-4\">\n      <h2 className=\"text-xl md:text-3xl my-3 text-indigo-800 antialiased font-normal md:font-medium\">\n        {savedProducts ? \"Saved Products\" : \"All Products\"}\n      </h2>\n      {product.length > 0 && (\n        <div className=\"flex flex-col\">\n          <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n            <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n              <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n                <table className=\"min-w-full divide-y divide-gray-200\">\n                  <thead className=\"bg-gray-50\">\n                    <tr>\n                      <th\n                        scope=\"col\"\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                      >\n                        Name\n                      </th>\n\n                      <th\n                        scope=\"col\"\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                      >\n                        Price\n                      </th>\n                      <th scope=\"col\" className=\"relative px-6 py-3\">\n                        <span className=\"sr-only\">Actions</span>\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\n                    {product.map((data) => (\n                      <tr key={data._id}>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <div className=\"flex items-center\">\n                            <div className=\"flex-shrink-0 h-20 w-10 md:w-16\">\n                              <img\n                                className=\"w-10 md:w-16 rounded-xl\"\n                                src={data.imgUrl}\n                                alt=\"\"\n                              />\n                            </div>\n                            <div className=\"ml-4\">\n                              <div className=\"text-sm md:text-xl font-semibold text-gray-600\">\n                                {data.name}\n                              </div>\n                            </div>\n                          </div>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <div className=\"text-lg text-gray-900\">\n                            â‚¹{data.price}\n                          </div>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                          {!savedProducts && (\n                            <button\n                              onClick={() => saveHandler(data)}\n                              className=\"px-3 py-2 border rounded-lg hover:bg-indigo-600 hover:text-white text-indigo-800\"\n                            >\n                              save\n                            </button>\n                          )}\n                          {savedProducts && (\n                            <button\n                              onClick={() => deleteSave(data)}\n                              className=\"px-3 py-2 border rounded-lg hover:bg-red-600 hover:text-white text-red-600\"\n                            >\n                              delete\n                            </button>\n                          )}\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      {product.length === 0 && (\n        <p className=\"text-lg text-gray-500 md:text-2xl text-center\">\n          No{savedProducts && \" Saved\"} Products Found\n        </p>\n      )}\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"names":["authCtx","useContext","AuthStore","id","useParams","useState","product","setProduct","productCtx","ProductStore","navigate","useNavigate","savedProducts","setSavedProducts","useEffect","undefined","products","name","JSON","parse","localStorage","getItem","length","isLoggedIn","alert","className","scope","map","data","src","imgUrl","alt","price","onClick","findIndex","response","_id","localProducts","setItem","stringify","saveHandler","updatedSavedProducts","filter","deleteSave"],"sourceRoot":""}